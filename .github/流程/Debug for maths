# -*- coding:utf-8 -*-
# 测试质数
print('公式: [(2^(2^n)) +1]是质数?(n为非负整数)')
def Rerun(n=1):
	n = float(n)
	if int(n) != n:
		return str(n),None
	n = int(n)
#----------------------------------------------------
	if n < 0:
		print('你输入了负整数，已经自动转为正整数')
		n = -n
	list = [1,None]
	a = (2**(2**n)) +1
	for b in range(1,a+1):
		if (a%b) == 0 and b != 1:
			list.insert(1, b)
			if b != a:
				list.insert(2,a/b)
	list.pop(-1)
	print(str(a) +'的因数为: '+ str(list))
	if list == [1,a]:
		return a, True
	return a, False
#----------------------------------------------------
def main():
	Number = Rerun(input('Enter:'))
	if Number[1] == True:
		print(str(Number[0]) +'是质数，目前该式子成立')
	elif Number[1] == None:
		print('请输入正整数（负整数可以被自动转为正整数）')
		main()
	else:
		print(str(Number[0]) +'不是质数，目前该式子不成立')
#----------------------------------------------------
main()
while True:
	pass
